# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import OBD_Service_pb2 as OBD__Service__pb2


class OBD_ServiceStub(object):
  """==============================================================
  	Service definition
  ===============================================================

  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Status = channel.unary_unary(
        '/OBD_Service/Status',
        request_serializer=OBD__Service__pb2.OBD_StatusRequest.SerializeToString,
        response_deserializer=OBD__Service__pb2.OBD_status.FromString,
        )
    self.Connect = channel.unary_unary(
        '/OBD_Service/Connect',
        request_serializer=OBD__Service__pb2.Start_OBD.SerializeToString,
        response_deserializer=OBD__Service__pb2.OBD_Result.FromString,
        )
    self.Read = channel.unary_stream(
        '/OBD_Service/Read',
        request_serializer=OBD__Service__pb2.OBD_cmd.SerializeToString,
        response_deserializer=OBD__Service__pb2.OBD_Result.FromString,
        )
    self.Stop = channel.unary_unary(
        '/OBD_Service/Stop',
        request_serializer=OBD__Service__pb2.OBD_cmd.SerializeToString,
        response_deserializer=OBD__Service__pb2.OBD_Result.FromString,
        )


class OBD_ServiceServicer(object):
  """==============================================================
  	Service definition
  ===============================================================

  """

  def Status(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Connect(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Read(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Stop(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_OBD_ServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Status': grpc.unary_unary_rpc_method_handler(
          servicer.Status,
          request_deserializer=OBD__Service__pb2.OBD_StatusRequest.FromString,
          response_serializer=OBD__Service__pb2.OBD_status.SerializeToString,
      ),
      'Connect': grpc.unary_unary_rpc_method_handler(
          servicer.Connect,
          request_deserializer=OBD__Service__pb2.Start_OBD.FromString,
          response_serializer=OBD__Service__pb2.OBD_Result.SerializeToString,
      ),
      'Read': grpc.unary_stream_rpc_method_handler(
          servicer.Read,
          request_deserializer=OBD__Service__pb2.OBD_cmd.FromString,
          response_serializer=OBD__Service__pb2.OBD_Result.SerializeToString,
      ),
      'Stop': grpc.unary_unary_rpc_method_handler(
          servicer.Stop,
          request_deserializer=OBD__Service__pb2.OBD_cmd.FromString,
          response_serializer=OBD__Service__pb2.OBD_Result.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'OBD_Service', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
